#
# ci/cloudbuild.merged.yaml
#
# Triggers:
#   - new stuff is merged either to 'master' or 'staging' branch
#
# Responsibility:
#   - run tests (once more..) and
#   - deploy the backend if any backend files changed
#   - package and deploy the front end if any 'app' or 'app-deploy-ops' files changed
#
# Runtime environment:
#   - Current directory is '/workspace/...', based on the 'dir' field
#
#   - env.variables (just some):
#     PWD=/workspace
#     HOME=/builder/home
#
# Note:
#   This approach should already support multiple stages (production; staging), in that those likely are different
#   Firebase projects, and as such carry their own CI setups. They'll track the same GitHub, but different branches.
#

substitutions:
  _BUILDER_TAG: 9.11.0-node16-npm7
  #_BUILDER_IMG: gcr.io/${PROJECT_ID}/firebase-ci-builder:9.11.0-node16-npm7

steps:
# DEBUG
#- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
#  entrypoint: bash
#  args: ['-c', 'echo', '1: ${BRANCH_NAME} 2: ${$_HEAD_BRANCH} 3: ${$_BASE_BRANCH}']

# Root install
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['install']

# Backend
#
# tbd. Can we check If backend files are unchanged, and skip this? Alternatively, two 'merged' jobs but the backend
#     one should be run first. #ask
#
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['install']
  dir: packages/backend
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run ci']
  dir: packages/backend
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run lint']
  dir: packages/backend
# DEPLOY
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run deploy']
  dir: packages/backend

# App
#
# tbd. Cypress image needed - see #39
#
# tbd. Is it possible to skip, if neither 'package/app' nor 'package/app-deploy-ops' (nor 'tools', nor 'package.json') files changed.
#
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['install']
  dir: packages/app
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run ci']
  dir: packages/app
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run lint']
  dir: packages/app

# App-deploy-ops
#
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['install']
  dir: packages/app-deploy-ops
- name: gcr.io/$PROJECT_ID/firebase-ci-builder:${_BUILDER_TAG}
  entrypoint: npm
  args: ['run', 'deploy']
  dir: packages/app-deploy-ops

# --- Timeout
#
# Local:        ...
# Cloud Build:  ...
#
timeout: 240s
