#!/bin/bash
set -eu -o pipefail

#
# Creates the '../../firebase.staging.js' contents (on stdout), based on the active Firebase project for the backend.
# Fails with an error message if no active project.
#
# Note:
#   The 'firebase.staging.js' is focused on the backend project, because that's what the app / app-deploy-ops
#   commands want to see. Therefore, it is appropriate that this script be placed therein, not in the repo's root.
#
# Context:
#   - called from the root's 'package.json'
#   - current folder: packages/backend
#
# Requires:
#   - grep
#

# 'firebase-tools' 9.13.1 gives a non-zero return code if the project doesn't exist. Good.
#
# For some reason, it blurs newlines when piped/captured. :E

TMP=$( (npx firebase-tools apps:sdkconfig | grep -v "^//" | grep "\"\(projectId\|appId\|locationId\|apiKey\|authDomain\)\":") || ( \
  >&2 echo "ERROR: No active Firebase project in 'packages/backend'. Please do 'npx firebase-tools use --add' in that folder."; \
  >&2 echo; \
  false \
)  )

echo -e \
  "// DO NOT EDIT THIS FILE. It's autogenerated.\n"\
"// To have a permanent staging setup, see instructions in 'README'.\n"\
"//\n"\
"const config = {\n${TMP}\n};\n"\
"export default config;"
